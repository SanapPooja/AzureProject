{
	"name": "NSH_INT068_IDB_cab_schilt_feed_material_Pub",
	"properties": {
		"activities": [
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(length(activity('Lookup1').output.value), 0)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": "WITH MaterialCTE AS (   \n    SELECT MATERIAL_NO, FEEDMAT_RECORD_ID \n    FROM SCM_ADMIN.ESB_CAB_SCHILT_FEED_MATERIAL\n    WHere ESBSTATUS = 'I'\n)\nSELECT \n    NVL(CSF.UPDATE_DATE, ' ') AS UPDATE_DATE,\n    NVL(CSF.CREATE_DATE, ' ') AS CREATE_DATE,\n    NVL(CSF.NO_OF_BARS, 0) AS NO_OF_BARS,\n    NVL(CSF.BAR_LENGTH, 0) AS BAR_LENGTH,\n    NVL(CSF.MATERIAL_SOURCE, ' ') AS MATERIAL_SOURCE,\n    NVL(CSF.DIAMETER, 0) AS DIAMETER,\n    NVL(CSF.GRADE, ' ') AS GRADE,\n    NVL(CSF.MATERIAL_NO, ' ') AS MATERIAL_NO,\n    NVL(CSF.FEEDMAT_RECORD_ID, ' ') AS FEEDMAT_RECORD_ID,\n    NVL(CSF.BBS_RUN_NO, ' ') AS BBS_RUN_NO,\n    NVL(CSF.GROUP_TAG_IND, ' ') AS GROUP_TAG_IND,\n    NVL(CSF.GROUP_TAG_TOTAL_TAGS, 0) AS GROUP_TAG_TOTAL_TAGS\nFROM \n    SCM_ADMIN.CAB_SCHILT_FEED_MATERIAL CSF\nJOIN \n    MaterialCTE MC ON CSF.MATERIAL_NO = MC.MATERIAL_NO AND CSF.FEEDMAT_RECORD_ID = MC.FEEDMAT_RECORD_ID;",
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "RestSink",
									"httpRequestTimeout": "00:05:00",
									"requestInterval": 10,
									"requestMethod": "POST",
									"writeBatchSize": "600",
									"httpCompressionType": "none"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "UPDATE_DATE",
												"type": "String"
											},
											"sink": {
												"path": "$UPDATE_DATE"
											}
										},
										{
											"source": {
												"name": "CREATE_DATE",
												"type": "String"
											},
											"sink": {
												"path": "$CREATE_DATE"
											}
										},
										{
											"source": {
												"name": "NO_OF_BARS",
												"type": "Double"
											},
											"sink": {
												"path": "$NO_OF_BARS"
											}
										},
										{
											"source": {
												"name": "BAR_LENGTH",
												"type": "Double"
											},
											"sink": {
												"path": "$BAR_LENGTH"
											}
										},
										{
											"source": {
												"name": "MATERIAL_SOURCE",
												"type": "String"
											},
											"sink": {
												"path": "$MATERIAL_SOURCE"
											}
										},
										{
											"source": {
												"name": "DIAMETER",
												"type": "Double"
											},
											"sink": {
												"path": "$DIAMETER"
											}
										},
										{
											"source": {
												"name": "GRADE",
												"type": "String"
											},
											"sink": {
												"path": "$GRADE"
											}
										},
										{
											"source": {
												"name": "MATERIAL_NO",
												"type": "String"
											},
											"sink": {
												"path": "$MATERIAL_NO"
											}
										},
										{
											"source": {
												"name": "FEEDMAT_RECORD_ID",
												"type": "String"
											},
											"sink": {
												"path": "$FEEDMAT_RECORD_ID"
											}
										},
										{
											"source": {
												"name": "BBS_RUN_NO",
												"type": "String"
											},
											"sink": {
												"path": "$BBS_RUN_NO"
											}
										},
										{
											"source": {
												"name": "GROUP_TAG_IND",
												"type": "String"
											},
											"sink": {
												"path": "$GROUP_TAG_IND"
											}
										},
										{
											"source": {
												"name": "GROUP_TAG_TOTAL_TAGS",
												"type": "Double"
											},
											"sink": {
												"path": "$GROUP_TAG_TOTAL_TAGS"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "int068_cab_schilt_feed_material1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "INT068_QUEUE_PROD",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"additionalColumns": [
										{
											"name": "ESBSTATUS",
											"value": "I"
										},
										{
											"name": "ESBUPDATETIME",
											"value": {
												"value": "@variables('CurrentTime')",
												"type": "Expression"
											}
										}
									],
									"oracleReaderQuery": "select MATERIAL_NO, FEEDMAT_RECORD_ID from (select MATERIAL_NO, FEEDMAT_RECORD_ID from SCM_ADMIN.CAB_SCHILT_FEED_MATERIAL\t\t\t\r\nminus\t\t\t\r\nselect  MATERIAL_NO, FEEDMAT_RECORD_ID from SCM_ADMIN.ESB_CAB_SCHILT_FEED_MATERIAL)\t\t\t\t",
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "OracleSink",
									"writeBatchSize": 10000
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "MATERIAL_NO",
												"type": "String"
											},
											"sink": {
												"name": "MATERIAL_NO",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "FEEDMAT_RECORD_ID",
												"type": "String"
											},
											"sink": {
												"name": "FEEDMAT_RECORD_ID",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "ESBSTATUS",
												"type": "String"
											},
											"sink": {
												"name": "ESBSTATUS",
												"type": "String"
											}
										},
										{
											"source": {
												"name": "ESBUPDATETIME",
												"type": "String"
											},
											"sink": {
												"name": "ESBUPDATETIME",
												"type": "String"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "int068_cab_schilt_feed_material1",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "int068_ESB_CAB_SCHILT_FEED_MATERIAL",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "CurrentTime",
								"value": {
									"value": "@concat(formatDateTime(addminutes(addhours(utcnow(), 8), 00), 'yyyy-MM-dd HH:mm:ss'), '.', formatDateTime(utcnow(), 'fff'))\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Fail",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SCM_CONNECTION_PROD",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "Update SCM_ADMIN.ESB_CAB_SCHILT_FEED_MATERIAL SET ESBSTATUS = 'E' Where ESBUPDATETIME ='@{variables('CurrentTime')}' and ESBSTATUS = 'I'",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Success",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SCM_CONNECTION_PROD",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "Update SCM_ADMIN.ESB_CAB_SCHILT_FEED_MATERIAL SET ESBSTATUS = 'S' Where ESBUPDATETIME ='@{variables('CurrentTime')}' and ESBSTATUS = 'I'",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "BatchSize",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "RowCount",
								"value": {
									"value": "@range(1, int(activity('BatchSize').output.value[0].recordcount))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "BatchSize",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy data2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": " SELECT Case When count(1)>0 Then     \r\n    cast(count(1)/600 as int) + 1 \r\n    Else 0\r\n    end as recordcount\r\n    FROM (            \r\n            SELECT MATERIAL_NO, FEEDMAT_RECORD_ID \r\n            FROM SCM_ADMIN.ESB_CAB_SCHILT_FEED_MATERIAL\r\n            WHere ESBSTATUS = 'I'\r\n    ) ",
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "int068_cab_schilt_feed_material1",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						}
					]
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "WITH MaterialCTE AS (    \r\nSELECT MATERIAL_NO, FEEDMAT_RECORD_ID From \r\n    (SELECT MATERIAL_NO, FEEDMAT_RECORD_ID \r\n     FROM SCM_ADMIN.CAB_SCHILT_FEED_MATERIAL\r\n     MINUS\r\n     SELECT MATERIAL_NO, FEEDMAT_RECORD_ID \r\n     FROM SCM_ADMIN.ESB_CAB_SCHILT_FEED_MATERIAL\r\n    )\r\n    WHERE ROWNUM <= 1000\r\n)\r\nSELECT \r\n    NVL(CSF.UPDATE_DATE, ' ') AS UPDATE_DATE,\r\n    NVL(CSF.CREATE_DATE, ' ') AS CREATE_DATE,\r\n    NVL(CSF.NO_OF_BARS, 0) AS NO_OF_BARS,\r\n    NVL(CSF.BAR_LENGTH, 0) AS BAR_LENGTH,\r\n    NVL(CSF.MATERIAL_SOURCE, ' ') AS MATERIAL_SOURCE,\r\n    NVL(CSF.DIAMETER, 0) AS DIAMETER,\r\n    NVL(CSF.GRADE, ' ') AS GRADE,\r\n    NVL(CSF.MATERIAL_NO, ' ') AS MATERIAL_NO,\r\n    NVL(CSF.FEEDMAT_RECORD_ID, ' ') AS FEEDMAT_RECORD_ID,\r\n    NVL(CSF.BBS_RUN_NO, ' ') AS BBS_RUN_NO,\r\n    NVL(CSF.GROUP_TAG_IND, ' ') AS GROUP_TAG_IND,\r\n    NVL(CSF.GROUP_TAG_TOTAL_TAGS, 0) AS GROUP_TAG_TOTAL_TAGS\r\nFROM \r\n    SCM_ADMIN.CAB_SCHILT_FEED_MATERIAL CSF\r\nJOIN \r\n    MaterialCTE MC ON CSF.MATERIAL_NO = MC.MATERIAL_NO AND CSF.FEEDMAT_RECORD_ID = MC.FEEDMAT_RECORD_ID;",
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "int068_cab_schilt_feed_material1",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('RowCount')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Execute Pipeline1",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "NSH_INT068_STS_cab_schilt_feed_material_Sub",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						}
					]
				}
			}
		],
		"variables": {
			"CurrentTime": {
				"type": "String",
				"defaultValue": "@concat(formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss'), '.', formatDateTime(utcnow(), 'fff'))"
			},
			"RowCount": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Prod_Env"
		},
		"annotations": []
	}
}