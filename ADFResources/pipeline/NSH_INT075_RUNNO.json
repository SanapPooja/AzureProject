{
	"name": "NSH_INT075_RUNNO",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "Select distinct top 5 run_no from dbo.tbl_scm_sts_cab_bender_download where REC_TYPE = 'Y'\t\t\t\t\t\t\t",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerTable11",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunNoArray",
					"value": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('RunNoArray')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "run_no",
								"value": {
									"value": "@item().run_no",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup2",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": {
										"value": "SELECT COUNT(*) AS count FROM scm_admin.cab_bender_download WHERE run_no='@{variables('run_no')}'\n",
										"type": "Expression"
									},
									"partitionOption": "None",
									"convertDecimalToInteger": false,
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "SCM_IDB_DB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Lookup5",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Lookup2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select count(*) cnt from  [dbo].[tbl_scm_sts_cab_bender_download] where run_no = '@{variables('run_no')}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SqlServerTable13",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Lookup6",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Lookup5",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": {
										"value": "select count(*) as count from scm_admin.view_cab_print_tag where run_no='H205074L0100'\n",
										"type": "Expression"
									},
									"partitionOption": "None",
									"convertDecimalToInteger": false,
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "SCM_IDB_DB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Lookup7",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Lookup6",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select count(*) as cnt from [dbo].[tbl_scm_sts_cab_print_tag] where run_no = '@{variables('run_no')}'\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SqlServerTable14",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup7",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(\n    equals(activity('Lookup2').output.value[0].count, activity('Lookup5').output.value[0].cnt),\n    equals(activity('Lookup6').output.value[0].count, activity('Lookup7').output.value[0].cnt)\n)\n\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup8",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "SELECT COUNT(DISTINCT rec_type) AS rec_type \nFROM [dbo].[tbl_scm_sts_cab_bender_download] \nWHERE run_no ='@{variables('run_no')}'\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SqlServerTable15",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "If Condition2",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup8",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Lookup8').output.value[0].rec_type, 1)\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition3",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup8",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Lookup8').output.firstRow.rec_type, 1)\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup9",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "If Condition2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "UPDATE dbo.tbl_scm_sts_cab_bender_download\nSET REC_TYPE = 'Y'\nWHERE run_no = '@{variables('run_no')}';\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SqlServerTable16",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Lookup10",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "If Condition3",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Lookup9",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "SELECT B.RUN_NO, A.GROUP_TAG_ID, COUNT(2) AS CNT\nFROM [tbl_scm_sts_cab_print_tag] A\nINNER JOIN [dbo].[tbl_scm_sts_cab_bender_download] B\nON A.run_no = B.run_no\nAND A.tag_no = B.tag_no\nWHERE A.run_no = '@{variables('run_no')}'\nAND ISNULL(A.group_tag_id,'') <> ''\nAND A.group_tag_id LIKE 'C%'\nGROUP BY B.RUN_NO, A.GROUP_TAG_ID\nHAVING COUNT(A.group_tag_id) > 1;\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SqlServerTable17",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Copy data3",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Lookup10",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "SELECT tag_no,\t\t\t\t\t\t\n  tag_qty,\t\t\t\t\t\t\n  productbar,\t\t\t\t\t\t\n  shapecode,\t\t\t\t\t\t\n  prodn_len,\t\t\t\t\t\t\n  spare1,\t\t\t\t\t\t\n  bbs_no,\t\t\t\t\t\t\n  barmark,\t\t\t\t\t\t\n  prodn_TAG_WT,\t\t\t\t\t\t\n  spare2,\t\t\t\t\t\t\n  spare3,\t\t\t\t\t\t\n  pin_type,\t\t\t\t\t\t\n  pin_size,\t\t\t\t\t\t\n  spare4,\t\t\t\t\t\t\n  spare5,\t\t\t\t\t\t\n  spare6,\t\t\t\t\t\t\n  no_of_bending,\t\t\t\t\t\t\n  spare7,\t\t\t\t\t\t\n  run_no,\t\t\t\t\t\t\n  spare8,\t\t\t\t\t\t\n  spare9,\t\t\t\t\t\t\n  planduration,\t\t\t\t\t\t\n  plan_machine,\t\t\t\t\t\t\n  no_of_segments,\t\t\t\t\t\t\n  spare12,\t\t\t\t\t\t\n  bvbs_len,\t\t\t\t\t\t\n  shape_bvbs_parameter\t\t\t\t\t\t\nFROM (\t\t\t\t\t\t\n  (SELECT tag_no,\t\t\t\t\t\t\n    tag_qty,\t\t\t\t\t\t\n    productbar,\t\t\t\t\t\t\n    shapecode,\t\t\t\t\t\t\n    prodn_len,\t\t\t\t\t\t\n    spare1,\t\t\t\t\t\t\n    bbs_no,\t\t\t\t\t\t\n    barmark,\t\t\t\t\t\t\n    substring(CAST(prodn_TAG_WT AS VARCHAR(50)),1,charindex('.',CAST(prodn_TAG_WT AS VARCHAR(50)))+2) prodn_tag_wt,\t\t\t\t\t\t\n    spare2,\t\t\t\t\t\t\n    spare3,\t\t\t\t\t\t\n    pin_type =\t\t\t\t\t\t\n    CASE\t\t\t\t\t\t\n      WHEN pin_type IN ('1','2')\t\t\t\t\t\t\n      THEN 'S'\t\t\t\t\t\t\n      WHEN pin_type ='3'\t\t\t\t\t\t\n      THEN 'N'\t\t\t\t\t\t\n    END ,\t\t\t\t\t\t\n    pin_size,\t\t\t\t\t\t\n    spare4,\t\t\t\t\t\t\n    spare5,\t\t\t\t\t\t\n    spare6,\t\t\t\t\t\t\n    no_of_bending,\t\t\t\t\t\t\n    spare7,\t\t\t\t\t\t\n    run_no,\t\t\t\t\t\t\n    spare8,\t\t\t\t\t\t\n    spare9,\t\t\t\t\t\t\n    planduration,\t\t\t\t\t\t\n    plan_machine,\t\t\t\t\t\t\n    no_of_segments,\t\t\t\t\t\t\n    spare12,\t\t\t\t\t\t\n    bvbs_len,\t\t\t\t\t\t\n    shape_bvbs_parameter+'@' shape_bvbs_parameter\t\t\t\t\t\t\n  FROM sts.dbo.tbl_scm_sts_cab_bender_download\t\t\t\t\t\t\n  WHERE run_no    = '@{variables('run_no')}'\t\t\t\t\t\n  AND tag_no NOT IN (\t\t\t\t\t\t\n    (SELECT d.tag_no\t\t\t\t\t\t\n    FROM\t\t\t\t\t\t\n      (SELECT B.RUN_NO,\t\t\t\t\t\t\n        A.GROUP_TAG_ID,\t\t\t\t\t\t\n        SUM(b.prodn_tag_wt) PRODN_TAG_WT,\t\t\t\t\t\t\n        SUM(b.PLANDURATION) PLANDURATION,\t\t\t\t\t\t\n        SUM(A.TAG_QTY) TAG_QTY,\t\t\t\t\t\t\n        COUNT(2) CNT\t\t\t\t\t\t\n      FROM [tbl_scm_sts_cab_print_tag] a\t\t\t\t\t\t\n      INNER JOIN [DBO].[tbl_scm_sts_cab_bender_download] b\t\t\t\t\t\t\n      ON a.run_no                    = b.run_no\t\t\t\t\t\t\n      AND a.tag_no                   = b.tag_no\t\t\t\t\t\t\n      WHERE a.run_no                 = '@{variables('run_no')}'\t\t\t\t\t\t\n      AND isnull(a.group_tag_id,'') <> ''\t\t\t\t\t\t\n      AND group_tag_id LIKE 'C%'\t\t\t\t\t\t\n      GROUP BY B.RUN_NO,\t\t\t\t\t\t\n        A.GROUP_TAG_ID\t\t\t\t\t\t\n      HAVING (COUNT(GROUP_TAG_ID) >1\t\t\t\t\t\t\n      OR COUNT(GROUP_TAG_ID)      =1 )\t\t\t\t\t\t\n      ) AS c\t\t\t\t\t\t\n    LEFT OUTER JOIN [tbl_scm_sts_cab_print_tag] d\t\t\t\t\t\t\n    ON c.run_no        = d.run_no\t\t\t\t\t\t\n    AND c.group_tag_id = d.group_tag_id\t\t\t\t\t\t\n    ) )\t\t\t\t\t\t\n  )\t\t\t\t\t\t\nUNION\t\t\t\t\t\t\n SELECT DISTINCT e.tag_no,\t\t\t\t\t\t\n    e.tag_qty,\t\t\t\t\t\t\n    b.grade_dia productbar,\t\t\t\t\t\t\n    e.shapecode,\t\t\t\t\t\t\n    e.prodn_len,\t\t\t\t\t\t\n    e.spare1,\t\t\t\t\t\t\n    B.bbs_no,\t\t\t\t\t\t\n    e.barmark,\t\t\t\t\t\t\n    e.prodn_tag_wt,\t\t\t\t\t\t\n    e.spare2,\t\t\t\t\t\t\n    e.spare3,\t\t\t\t\t\t\n    pin_type =\t\t\t\t\t\t\n    CASE\t\t\t\t\t\t\n      WHEN a.pin_type IN ('1','2')\t\t\t\t\t\t\n      THEN 'S'\t\t\t\t\t\t\n      WHEN a.pin_type ='3'\t\t\t\t\t\t\n      THEN 'N'\t\t\t\t\t\t\n    END ,\t\t\t\t\t\t\n    b.pin_size,\t\t\t\t\t\t\n    e.spare4,\t\t\t\t\t\t\n    e.spare5,\t\t\t\t\t\t\n    e.spare6,\t\t\t\t\t\t\n    e.no_of_bending,\t\t\t\t\t\t\n    e.spare7,\t\t\t\t\t\t\n    a.run_no,\t\t\t\t\t\t\n    e.spare8,\t\t\t\t\t\t\n    e.spare9,\t\t\t\t\t\t\n    e.planduration,\t\t\t\t\t\t\n    b.workcenter plan_machine,\t\t\t\t\t\t\n    e.no_of_segments,\t\t\t\t\t\t\n    e.spare12,\t\t\t\t\t\t\n    e.bvbs_len,\t\t\t\t\t\t\n    b.bvbs+'@' shape_bvbs_parameter\t\t\t\t\t\t\n  FROM sts.dbo.tbl_scm_sts_cab_bender_download a\t\t\t\t\t\t\n  INNER JOIN sts.dbo.tbl_scm_sts_cab_print_tag b\t\t\t\t\t\t\n  ON a.run_no = b.run_no\t\t\t\t\t\t\n  INNER JOIN\t\t\t\t\t\t\n    (SELECT DISTINCT c.RUN_NO,\t\t\t\t\t\t\n      c.PRODN_TAG_WT,\t\t\t\t\t\t\n      c.PLANDURATION,\t\t\t\t\t\t\n      c.TAG_QTY,\t\t\t\t\t\t\n      d.group_tag_id,\t\t\t\t\t\t\n      c.bvbs_len,\t\t\t\t\t\t\n      c.prodn_len,\t\t\t\t\t\t\n      c.shapecode,\t\t\t\t\t\t\n      c.barmark,\t\t\t\t\t\t\n\t  c.spare1,c.spare2,c.spare3,c.spare4,c.spare5,c.spare6,c.spare7,c.spare8,c.spare9,c.spare12,\t\t\t\t\t\n      c.no_of_segments,\t\t\t\t\t\t\n      c.no_of_bending,\t\t\t\t\t\t\n      TAG_NO =\t\t\t\t\t\t\n      CASE\t\t\t\t\t\t\n        WHEN CNT = '1'\t\t\t\t\t\t\n        THEN d.TAG_NO\t\t\t\t\t\t\n        WHEN CNT > '1'\t\t\t\t\t\t\n        THEN d.GROUP_TAG_ID\t\t\t\t\t\t\n      END\t\t\t\t\t\t\n     FROM\t\t\t\t\t\t\n\t\t(select run_no,group_tag_id,bvbs_len,shapecode,barmark,no_of_segments,no_of_bending,spare1,spare2,spare3,\t\t\t\t\n\t\t\tspare4,spare5,spare6,spare7,spare8,spare9,spare12,prodn_tag_wt1 as prodn_tag_wt, prodn_tag_wt1 as prodn_tag,planduration,\t\t\t\n\t\t\ttag_qty1 as tag_qty,\t\t\t\n\t\t\tprodn_len,cnt from (\t\t\t\n\t\t\tselect \t\t\t\n\t\t\trun_no,group_tag_id,bvbs_len,shapecode,barmark,no_of_segments,no_of_bending,spare1,spare2,spare3,\t\t\t\n\t\t\tspare4,spare5,spare6,spare7,spare8,spare9,spare12,prodn_tag_wt,planduration,tag_qty,\t\t\t\n\t\t\tprodn_len,cnt,row_number() over (partition by run_no,group_tag_id order by run_no,group_tag_id) as num,\t\t\t\n\t\t\tsum(planduration) over(partition by run_no,group_tag_id) as planduration1,\t\t\t\n\t\t\tsum(prodn_tag_wt) over(partition by run_no,group_tag_id) as prodn_tag_wt1,\t\t\t\n\t\t\tsum(tag_qty) over(partition by run_no,group_tag_id) as tag_qty1\t\t\t\n\t\t\tfrom \t\t\t\n\t\t\t(SELECT B.RUN_NO,\t\t\t\n\t\t\t\tA.GROUP_TAG_ID,\t\t\n\t\t\t\tb.bvbs_len,\t\t\n\t\t\t\tb.Shapecode,\t\t\n\t\t\t\tb.barmark,\t\t\n\t\t\t\tb.no_of_segments,\t\t\n\t\t\t\tb.no_of_bending,\t\t\n\t\t\t\tb.spare1,b.spare2,b.spare3,b.spare4,b.spare5,b.spare6,b.spare7,b.spare8,b.spare9,b.spare12,\t\t\n\t\t\t\tSUM(b.prodn_tag_wt) PRODN_TAG_WT,\t\t\n\t\t\t\tSUM(b.PLANDURATION) PLANDURATION,\t\t\n\t\t\t\tSUM(A.TAG_QTY) TAG_QTY,\t\t\n\t\t\t\tb.prodn_len PRODN_LEN,\t\t\n\t\t\t\tCOUNT(2) CNT\t\t\n\t\t\t  FROM [tbl_scm_sts_cab_print_tag] a\t\t\t\n\t\t\t  INNER JOIN [DBO].[tbl_scm_sts_cab_bender_download] b\t\t\t\n\t\t\t  ON a.run_no                    = b.run_no\t\t\t\n\t\t\t  AND a.tag_no                   = b.tag_no\t\t\t\n\t\t\t  WHERE a.run_no                 = '@{variables('run_no')}'\t\t\t\n\t\t\t  AND isnull(a.group_tag_id,'') <> ''\t\t\t\n\t\t\t  AND group_tag_id LIKE 'C%'\t\t\t\n\t\t\t  GROUP BY B.RUN_NO,\t\t\t\n\t\t\t\tA.GROUP_TAG_ID,\t\t\n\t\t\t\tb.bvbs_len,\t\t\n\t\t\t\tb.prodn_len,\t\t\n\t\t\t\tb.shapecode,\t\t\n\t\t\t\tb.barmark,\t\t\n\t\t\t\tb.no_of_segments,\t\t\n\t\t\t\tb.no_of_bending,\t\t\n\t\t\t\tb.spare1,b.spare2,b.spare3,b.spare4,b.spare5,b.spare6,b.spare7,b.spare8,b.spare9,b.spare12\t\t\n\t\t\t  HAVING (COUNT(GROUP_TAG_ID) >1\t\t\t\n\t\t\t  OR COUNT(GROUP_TAG_ID)      =1 )) as temp ) as inn where num = 1\t\t\t\n\t\t) AS c\t\t\t\t\n\t\t\tLEFT OUTER JOIN [tbl_scm_sts_cab_print_tag] d\t\t\t\n\t\t\tON c.run_no              = d.run_no\t\t\t\n\t\t\tAND c.group_tag_id       = d.group_tag_id\t\t\t\n    ) AS e ON e.group_tag_id = b.tag_no\t\t\t\t\t\t\n  AND b.group_tag_ind        = 'Y') AS tblMain\t\t\t\t\t\t\nORDER BY CAST ( substring(tag_no,2, LEN(tag_no)) AS INT)\t",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "FileServerWriteSettings",
										"copyBehavior": "PreserveHierarchy"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "tag_no",
												"type": "String",
												"physicalType": "nvarchar"
											},
											"sink": {
												"name": "tag_no",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "tag_qty",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 0,
												"precision": 38
											},
											"sink": {
												"name": "tag_qty",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "productbar",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "productbar",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "shapecode",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "shapecode",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "prodn_len",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 0,
												"precision": 10
											},
											"sink": {
												"name": "prodn_len",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare1",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare1",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "bbs_no",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "bbs_no",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "barmark",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "barmark",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "prodn_TAG_WT",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 9,
												"precision": 38
											},
											"sink": {
												"name": "prodn_TAG_WT",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare2",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare2",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare3",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare3",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "pin_type",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "pin_type",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "pin_size",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 0,
												"precision": 10
											},
											"sink": {
												"name": "pin_size",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare4",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare4",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare5",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare5",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare6",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare6",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "no_of_bending",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 0,
												"precision": 10
											},
											"sink": {
												"name": "no_of_bending",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare7",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare7",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "run_no",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "run_no",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare8",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare8",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare9",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare9",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "planduration",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 0,
												"precision": 38
											},
											"sink": {
												"name": "planduration",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "plan_machine",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "plan_machine",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "no_of_segments",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 0,
												"precision": 10
											},
											"sink": {
												"name": "no_of_segments",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "spare12",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "spare12",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "bvbs_len",
												"type": "Decimal",
												"physicalType": "decimal",
												"scale": 0,
												"precision": 10
											},
											"sink": {
												"name": "bvbs_len",
												"type": "String",
												"physicalType": "String"
											}
										},
										{
											"source": {
												"name": "shape_bvbs_parameter",
												"type": "String",
												"physicalType": "varchar"
											},
											"sink": {
												"name": "shape_bvbs_parameter",
												"type": "String",
												"physicalType": "String"
											}
										}
									],
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SqlServerTable20",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "NSH_INT075_Bendfiletxt",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "CutFiles",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "SELECT DISTINCT fld_r_run_no as RunNo\r\n    ,fld_r_dia_ref  as Dia\r\n    ,fld_r_prod_type_ref as ProdType\r\nFROM (\r\n    SELECT fld_r_run_no\r\n        ,fld_r_prod_type_ref = CASE\r\n            WHEN fld_r_prod_type_ref = 'H'\r\n                THEN 'H'\r\n            WHEN fld_r_prod_type_ref = 'T'\r\n                THEN 'H'\r\n            ELSE fld_r_prod_type_ref\r\n            END\r\n        ,fld_r_start_stock_len\r\n        ,fld_r_dia_ref\r\n        ,cast(fld_l_comb_no AS INT) AS fld_l_comb_no\r\n        ,fld_d_cutting_seq_no\r\n        ,fld_l_qty_of_segment\r\n        ,fld_l_stock_bars_len\r\n        ,convert(NUMERIC(18, 0), isnull(fld_d_no_of_cuts, 0)) AS fld_d_no_of_cuts\r\n        ,fld_d_section_no\r\n        ,fld_d_bin_number = CASE\r\n            WHEN (\r\n                    fld_d_bin_number = 'NULL'\r\n                    OR isnull(fld_d_bin_number, ' ') = ' '\r\n                    )\r\n                THEN ' '\r\n            ELSE fld_d_bin_number\r\n            END\r\n        ,fld_d_cut_length\r\n        ,fld_d_tag_ref_info\r\n        ,isnull(fld_d_straight_bend_flag, ' ') AS fld_d_straight_bend_flag\r\n        ,isnull(fld_d_tag_no, '0') AS fld_d_tag_no\r\n        ,fld_rec_type\r\n        ,fld_d_bbs_bar_mark_info = CASE\r\n            WHEN (\r\n                    fld_d_offcut_ind = 'Y'\r\n                    AND (\r\n                        fld_d_bin_number <> 'NULL'\r\n                        AND isnull(fld_d_bin_number, ' ') <> ' '\r\n                        )\r\n                    )\r\n                THEN 'OFFCUT'\r\n            ELSE fld_d_bbs_bar_mark_info\r\n            END\r\n        ,isnull(fld_d_flag_info, ' ') AS fld_d_flag_info\r\n    FROM sts.dbo.tbl_scm_sts_rms_cab_shear\r\n    WHERE isnull(fld_r_run_no, '') <> ''\r\n        AND fld_d_no_of_cuts > 0\r\n    ) AS A\r\nWHERE A.fld_d_bbs_bar_mark_info <> ''\r\n    AND fld_rec_type <> 'S'\r\nORDER BY fld_r_run_no\r\n    ,fld_r_dia_ref",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "STS_RMS_CAB_SHEAR",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Run_No_Array",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "CutFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunNoArr",
					"value": {
						"value": "@activity('CutFiles').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Run_No_Array",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('RunNoArr')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set variable3",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "RunNo",
								"value": {
									"value": "@item().RunNo",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable5",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "If Condition6",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "STSRunCnt",
								"value": {
									"value": "@activity('Lookup4').output.value[0].countSTS",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup3",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set variable3",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": {
										"value": "select r_run_no, count(1) as countIDB from scm_admin.cab_rms_shearline_download where r_run_no in ('@{variables('RunNo')}') group by r_run_no",
										"type": "Expression"
									},
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "SCM_IDB_DB",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Lookup4",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "If Condition5",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select fld_r_run_no,count(1) as countSTS from [dbo].[tbl_scm_sts_rms_cab_shear] where fld_r_run_no in ('@{variables('RunNo')}') group by fld_r_run_no",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "NSQADB2",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "If Condition4",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set variable5",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@if(empty(activity('Lookup3').output.value), false, equals(activity('Lookup3').output.value[0].countIDB, activity('Lookup3').output.value[0].countSTS))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"state": "Inactive",
										"onInactiveMarkAs": "Succeeded",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": "\t SELECT DISTINCT fld_r_run_no\r\n    ,fld_r_dia_ref\r\n    ,fld_r_prod_type_ref\r\nFROM (\r\n    SELECT fld_r_run_no\r\n        ,fld_r_prod_type_ref = CASE\r\n            WHEN fld_r_prod_type_ref = 'H'\r\n                THEN 'H'\r\n            WHEN fld_r_prod_type_ref = 'T'\r\n                THEN 'H'\r\n            ELSE fld_r_prod_type_ref\r\n            END\r\n        ,fld_r_start_stock_len\r\n        ,fld_r_dia_ref\r\n        ,cast(fld_l_comb_no AS INT) AS fld_l_comb_no\r\n        ,fld_d_cutting_seq_no\r\n        ,fld_l_qty_of_segment\r\n        ,fld_l_stock_bars_len\r\n        ,convert(NUMERIC(18, 0), isnull(fld_d_no_of_cuts, 0)) AS fld_d_no_of_cuts\r\n        ,fld_d_section_no\r\n        ,fld_d_bin_number = CASE\r\n            WHEN (\r\n                    fld_d_bin_number = 'NULL'\r\n                    OR isnull(fld_d_bin_number, ' ') = ' '\r\n                    )\r\n                THEN ' '\r\n            ELSE fld_d_bin_number\r\n            END\r\n        ,fld_d_cut_length\r\n        ,fld_d_tag_ref_info\r\n        ,isnull(fld_d_straight_bend_flag, ' ') AS fld_d_straight_bend_flag\r\n        ,isnull(fld_d_tag_no, '0') AS fld_d_tag_no\r\n        ,fld_rec_type\r\n        ,fld_d_bbs_bar_mark_info = CASE\r\n            WHEN (\r\n                    fld_d_offcut_ind = 'Y'\r\n                    AND (\r\n                        fld_d_bin_number <> 'NULL'\r\n                        AND isnull(fld_d_bin_number, ' ') <> ' '\r\n                        )\r\n                    )\r\n                THEN 'OFFCUT'\r\n            ELSE fld_d_bbs_bar_mark_info\r\n            END\r\n        ,isnull(fld_d_flag_info, ' ') AS fld_d_flag_info\r\n    FROM sts.dbo.tbl_scm_sts_rms_cab_shear\r\n    WHERE isnull(fld_r_run_no, '') <> ''\r\n        AND fld_d_no_of_cuts > 0\r\n    ) AS A\r\nWHERE A.fld_d_bbs_bar_mark_info <> ''\r\n    AND fld_rec_type <> 'S'\r\nORDER BY fld_r_run_no\r\n    ,fld_r_dia_ref",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "RestSink",
												"httpRequestTimeout": "00:05:00",
												"requestInterval": 10,
												"requestMethod": "POST",
												"writeBatchSize": 10000,
												"httpCompressionType": "none"
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"name": "fld_r_run_no",
															"type": "String"
														},
														"sink": {
															"path": "$['fld_r_run_no']"
														}
													},
													{
														"source": {
															"name": "fld_r_dia_ref",
															"type": "Decimal"
														},
														"sink": {
															"path": "$['fld_r_dia_ref']"
														}
													},
													{
														"source": {
															"name": "fld_r_prod_type_ref",
															"type": "String"
														},
														"sink": {
															"path": "$['fld_r_prod_type_ref']"
														}
													}
												]
											}
										},
										"inputs": [
											{
												"referenceName": "NSQADB2",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "NSH_INT075_CUT_FILE_QUEUE",
												"type": "DatasetReference"
											}
										]
									},
									{
										"name": "Copy data2",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": "SELECT fld_d_no_of_cuts\t\t\t\t\t\t\t\t\r\n\t\t,fld_d_section_no\t\t\t\t\t\t\t\r\n\t\t,fld_d_bin_number\t\t\t\t\t\t\t\r\n\t\t,fld_d_cut_length\t\t\t\t\t\t\t\r\n\t\t,fld_d_tag_ref_info\t\t\t\t\t\t\t\r\n\t\t,fld_d_straight_bend_flag\t\t\t\t\t\t\t\r\n\t\t,fld_d_bbs_bar_mark_info\t\t\t\t\t\t\t\r\n\t\t,fld_d_tag_no\t\t\t\t\t\t\t\r\n\t\t,fld_d_flag_info\t\t\t\t\t\t\t\r\n\t\t,fld_d_cutting_seq_no\t\t\t\t\t\t\t\r\n\tFROM (\t\t\t\t\t\t\t\t\r\n\t\tSELECT fld_r_run_no\t\t\t\t\t\t\t\r\n\t\t\t,fld_r_prod_type_ref\t\t\t\t\t\t\r\n\t\t\t,fld_r_start_stock_len\t\t\t\t\t\t\r\n\t\t\t,fld_r_dia_ref\t\t\t\t\t\t\r\n\t\t\t,cast(fld_l_comb_no AS INT) AS fld_l_comb_no\t\t\t\t\t\t\r\n\t\t\t,fld_d_cutting_seq_no\t\t\t\t\t\t\r\n\t\t\t,fld_l_qty_of_segment\t\t\t\t\t\t\r\n\t\t\t,fld_l_stock_bars_len\t\t\t\t\t\t\r\n\t\t\t,convert(NUMERIC(18, 0), isnull(fld_d_no_of_cuts, 0)) AS fld_d_no_of_cuts\t\t\t\t\t\t\r\n\t\t\t,fld_d_section_no\t\t\t\t\t\t\r\n\t\t\t,fld_d_bin_number = CASE \t\t\t\t\t\t\r\n\t\t\t\tWHEN (\t\t\t\t\t\r\n\t\t\t\t\t\tfld_d_bin_number = 'NULL'\t\t\t\r\n\t\t\t\t\t\tOR isnull(fld_d_bin_number, ' ') = ' '\t\t\t\r\n\t\t\t\t\t\t)\t\t\t\r\n\t\t\t\t\tTHEN ' '\t\t\t\t\r\n\t\t\t\tELSE fld_d_bin_number\t\t\t\t\t\r\n\t\t\t\tEND\t\t\t\t\t\r\n\t\t\t,fld_d_cut_length\t\t\t\t\t\t\r\n\t\t\t,fld_d_tag_ref_info\t\t\t\t\t\t\r\n\t\t\t,isnull(fld_d_straight_bend_flag, ' ') AS fld_d_straight_bend_flag\t\t\t\t\t\t\r\n\t\t\t,isnull(fld_d_tag_no, '0') AS fld_d_tag_no\t\t\t\t\t\t\r\n\t\t\t,fld_rec_type\t\t\t\t\t\t\r\n\t\t\t,fld_d_bbs_bar_mark_info = CASE \t\t\t\t\t\t\r\n\t\t\t\tWHEN (\t\t\t\t\t\r\n\t\t\t\t\t\tfld_d_offcut_ind = 'Y'\t\t\t\r\n\t\t\t\t\t\tAND (\t\t\t\r\n\t\t\t\t\t\t\tfld_d_bin_number <> 'NULL'\t\t\r\n\t\t\t\t\t\t\tAND isnull(fld_d_bin_number, ' ') <> ' '\t\t\r\n\t\t\t\t\t\t\t)\t\t\r\n\t\t\t\t\t\t)\t\t\t\r\n\t\t\t\t\tTHEN 'OFFCUT'\t\t\t\t\r\n\t\t\t\tELSE fld_d_bbs_bar_mark_info\t\t\t\t\t\r\n\t\t\t\tEND\t\t\t\t\t\r\n\t\t\t,isnull(fld_d_flag_info, ' ') AS fld_d_flag_info\t\t\t\t\t\t\r\n\t\tFROM sts.dbo.tbl_scm_sts_rms_cab_shear\t\t\t\t\t\t\t\r\n\t\tWHERE isnull(fld_r_run_no, '') <> ''\t\t\t\t\t\t\t\r\n\t\t\tAND fld_d_no_of_cuts > 0\t\t\t\t\t\t\r\n\t\t) AS A\t\t\t\t\t\t\t\r\n\tWHERE A.fld_d_bbs_bar_mark_info <> ''\t\t\t\t\t\t\t\t\r\n\t\t--AND fld_rec_type <> 'S'\t\t\t\t\t\t\t\r\n\t\tAND A.fld_r_run_no = 'H205184L0000'\t\t\t\t\t\r\n\t\tAND A.fld_r_dia_ref = 32.000000000\t\t\t\t\t\t\t\r\n\t\tAND A.fld_l_comb_no = 46\t\t\t\t\t\t\t\t\r\n\t\tAND A.fld_r_prod_type_ref = 'H'\t\t\t\t\t\t\t\r\n\tORDER BY A.fld_r_run_no\t\t\t\t\t\t\t\t\r\n\t\t,A.fld_r_dia_ref ASC\t\t\t\t\t\t\t\r\n\t\t,A.fld_l_comb_no ASC\t\t\t\t\t\t\t\r\n\t\t,A.fld_d_cutting_seq_no ASC\t",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "FileServerWriteSettings",
													"copyBehavior": "PreserveHierarchy"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"maxRowsPerFile": 1,
													"fileNamePrefix": {
														"value": "@{variables('RunNo')}",
														"type": "Expression"
													},
													"quoteAllText": true,
													"fileExtension": ".OUS"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "NSQADB2",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "CutTextFile",
												"type": "DatasetReference"
											}
										]
									}
								]
							}
						},
						{
							"name": "If Condition5",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup3",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@if(empty(activity('Lookup3').output.value), true, or(equals(activity('Lookup3').output.value[0].countIDB, null), equals(activity('Lookup3').output.value[0].countIDB, 0)))\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition6",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup4",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@if(empty(activity('Lookup4').output.value), true, or(equals(activity('Lookup4').output.value[0].countSTS, null), equals(activity('Lookup4').output.value[0].countSTS, 0)))",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"run_no": {
				"type": "String"
			},
			"run_no_arr": {
				"type": "Array"
			},
			"IDBRunCnt": {
				"type": "String"
			},
			"STSRunCnt": {
				"type": "Integer"
			},
			"IDBRunCont": {
				"type": "Integer"
			},
			"RunNo": {
				"type": "String"
			},
			"RunNoArr": {
				"type": "Array"
			},
			"RunNoCheck": {
				"type": "Boolean"
			},
			"RunNoArray": {
				"type": "Array"
			}
		},
		"annotations": []
	}
}